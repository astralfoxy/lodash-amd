define(["lodash/string"], ["lodash/string/camelCase", "lodash/string/capitalize", "lodash/string/deburr", "lodash/string/endsWith", "lodash/string/escape", "lodash/string/escapeRegExp", "lodash/string/kebabCase", "lodash/string/pad", "lodash/string/padLeft", "lodash/string/padRight", "lodash/string/parseInt", "lodash/string/repeat", "lodash/string/snakeCase", "lodash/string/startCase", "lodash/string/startsWith", "lodash/string/template", "lodash/string/templateSettings", "lodash/string/trim", "lodash/string/trimLeft", "lodash/string/trimRight", "lodash/string/trunc", "lodash/string/unescape", "lodash/string/words"], function(camelCase, capitalize, deburr, endsWith, escape, escapeRegExp, kebabCase, pad, padLeft, padRight, parseInt, repeat, snakeCase, startCase, startsWith, template, templateSettings, trim, trimLeft, trimRight, trunc, unescape, words) {  return {
    'camelCase': camelCase,
    'capitalize': capitalize,
    'deburr': deburr,
    'endsWith': endsWith,
    'escape': escape,
    'escapeRegExp': escapeRegExp,
    'kebabCase': kebabCase,
    'pad': pad,
    'padLeft': padLeft,
    'padRight': padRight,
    'parseInt': parseInt,
    'repeat': repeat,
    'snakeCase': snakeCase,
    'startCase': startCase,
    'startsWith': startsWith,
    'template': template,
    'templateSettings': templateSettings,
    'trim': trim,
    'trimLeft': trimLeft,
    'trimRight': trimRight,
    'trunc': trunc,
    'unescape': unescape,
    'words': words
  };
});
